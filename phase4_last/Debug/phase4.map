Archive member included because of file (symbol)

c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./uart_driver.o (__udivmodsi4)
c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./wifi_driver.o (__do_copy_data)
c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./phase4.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./motor.o
LOAD ./phase4.o
LOAD ./pwm.o
LOAD ./uart_driver.o
LOAD ./wifi_driver.o
LOAD c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x6da
 *(.vectors)
 .vectors       0x00000000       0x54 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./motor.o
 .text          0x00000092        0x0 ./phase4.o
 .text          0x00000092        0x0 ./pwm.o
 .text          0x00000092        0x0 ./uart_driver.o
 .text          0x00000092        0x0 ./wifi_driver.o
 .text          0x00000092        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.Motor_init
                0x00000092       0xb6 ./motor.o
                0x00000092                Motor_init
 .text.Motor_move_forward
                0x00000148       0x46 ./motor.o
                0x00000148                Motor_move_forward
 .text.Motor_move_backward
                0x0000018e       0x46 ./motor.o
                0x0000018e                Motor_move_backward
 .text.Motor_turn_right
                0x000001d4       0x46 ./motor.o
                0x000001d4                Motor_turn_right
 .text.Motor_turn_left
                0x0000021a       0x46 ./motor.o
                0x0000021a                Motor_turn_left
 .text.Motor_slide_right
                0x00000260       0x46 ./motor.o
                0x00000260                Motor_slide_right
 .text.Motor_slide_left
                0x000002a6       0x46 ./motor.o
                0x000002a6                Motor_slide_left
 .text.Motor_stop
                0x000002ec       0x46 ./motor.o
                0x000002ec                Motor_stop
 .text.main     0x00000332       0xa8 ./phase4.o
                0x00000332                main
 .text.timer1_pwm_init
                0x000003da       0x90 ./pwm.o
                0x000003da                timer1_pwm_init
 .text.UART_Init
                0x0000046a       0xca ./uart_driver.o
                0x0000046a                UART_Init
 .text.UART_DeInit
                0x00000534       0x14 ./uart_driver.o
                0x00000534                UART_DeInit
 .text.UART_Write_String
                0x00000548       0x38 ./uart_driver.o
                0x00000548                UART_Write_String
 .text.UART_Write_Byte
                0x00000580       0x2e ./uart_driver.o
                0x00000580                UART_Write_Byte
 .text.UART_Receive_Byte
                0x000005ae       0x1e ./uart_driver.o
                0x000005ae                UART_Receive_Byte
 .text.__vector_13
                0x000005cc       0x20 ./uart_driver.o
                0x000005cc                __vector_13
 .text.Wait_for_Transmission_Complete
                0x000005ec       0x20 ./uart_driver.o
                0x000005ec                Wait_for_Transmission_Complete
 .text.wifisetup
                0x0000060c       0x42 ./wifi_driver.o
                0x0000060c                wifisetup
 .text.get_the_command
                0x0000064e       0x14 ./wifi_driver.o
                0x0000064e                get_the_command
 .text.delay    0x00000662       0x30 ./wifi_driver.o
                0x00000662                delay
 .text.libgcc   0x00000692       0x44 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000692                __udivmodsi4
 .text.libgcc   0x000006d6        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000006d6        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000006d6        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000006d6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000006d6        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000006d6                exit
                0x000006d6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000006d6        0x4 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000006da                _etext = .

.data           0x00800060       0x6e load address 0x000006da
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./motor.o
 .data          0x00800060        0x0 ./phase4.o
 .data          0x00800060        0x0 ./pwm.o
 .data          0x00800060        0x0 ./uart_driver.o
 .data          0x00800060       0x6d ./wifi_driver.o
 .data          0x008000cd        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x008000cd        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000cd        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000cd        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000ce                . = ALIGN (0x2)
 *fill*         0x008000cd        0x1 00
                0x008000ce                _edata = .
                0x008000ce                PROVIDE (__data_end, .)

.bss            0x008000ce        0x5
                0x008000ce                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000ce        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000ce        0x0 ./motor.o
 .bss           0x008000ce        0x0 ./phase4.o
 .bss           0x008000ce        0x0 ./pwm.o
 .bss           0x008000ce        0x0 ./uart_driver.o
 .bss           0x008000ce        0x0 ./wifi_driver.o
 .bss           0x008000ce        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x008000ce        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000ce        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000ce        0x0 c:/hazem/study/embedded systems/imt/avr_prepare/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.falling_edge_flag
                0x008000ce        0x1 ./phase4.o
                0x008000ce                falling_edge_flag
 .bss.Distance_right
                0x008000cf        0x2 ./phase4.o
                0x008000cf                Distance_right
 .bss.UART_Rx_Callback
                0x008000d1        0x2 ./uart_driver.o
 *(COMMON)
                0x008000d3                PROVIDE (__bss_end, .)
                0x000006da                __data_load_start = LOADADDR (.data)
                0x00000748                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000d3        0x0
                0x008000d3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000d3                PROVIDE (__noinit_end, .)
                0x008000d3                _end = .
                0x008000d3                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xd50
 *(.stab)
 .stab          0x00000000      0x498 ./motor.o
 .stab          0x00000498      0x1d4 ./phase4.o
                                0x27c (size before relaxing)
 .stab          0x0000066c      0x1b0 ./pwm.o
                                0x24c (size before relaxing)
 .stab          0x0000081c      0x324 ./uart_driver.o
                                0x3d8 (size before relaxing)
 .stab          0x00000b40      0x210 ./wifi_driver.o
                                0x2d0 (size before relaxing)

.stabstr        0x00000000      0x67d
 *(.stabstr)
 .stabstr       0x00000000      0x67d ./motor.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(phase4.elf elf32-avr)
LOAD linker stubs
